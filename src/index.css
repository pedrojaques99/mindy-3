@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', system-ui, sans-serif;
    scroll-behavior: smooth;
  }
  
  body {
    @apply bg-dark-100 text-white;
    background: linear-gradient(135deg, theme('colors.dark.100') 0%, theme('colors.dark.200') 100%);
    min-height: 100vh;
  }

  /* Subtle grid background for depth */
  .grid-bg {
    background-image: 
      linear-gradient(rgba(255, 255, 255, 0.02) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.02) 1px, transparent 1px);
    background-size: 20px 20px;
  }
}

@layer components {
  .glass-card {
    @apply bg-glass-200 backdrop-blur-md border border-glass-300 rounded-xl shadow-lg;
    transition: all 0.2s ease-in-out;
  }
  
  .glass-card:hover {
    @apply border-glass-300/80;
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3);
  }
  
  .btn {
    @apply px-4 py-2 rounded-lg font-medium transition-all duration-200 flex items-center justify-center;
  }
  
  .btn-primary {
    @apply bg-lime-accent/10 hover:bg-lime-accent/20 text-lime-accent;
  }
  
  .btn-secondary {
    @apply bg-glass-100 hover:bg-glass-200 text-white;
  }
  
  .tag {
    @apply text-xs px-2 py-0.5 rounded-full bg-glass-100 text-gray-300 transition-colors duration-200;
  }
  
  .tag:hover {
    @apply bg-glass-200 text-white;
  }
  
  /* Spotlight effect */
  .spotlight {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: radial-gradient(
      circle at var(--x, 50%) var(--y, 50%),
      rgba(191, 255, 88, 0.08) 0%,
      rgba(0, 0, 0, 0) 60%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .group:hover .spotlight {
    opacity: 1;
  }
  
  /* Main content adjustment when panel is open */
  /* Removed panel-related styles */
}

@layer utilities {
  .text-shadow {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .text-shadow-lg {
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
  }
  
  /* Animated gradient background */
  .animated-gradient {
    background: linear-gradient(
      -45deg,
      theme('colors.dark.100'),
      theme('colors.dark.300'),
      theme('colors.lime.accent') / 0.1,
      theme('colors.dark.200')
    );
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }
  
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
  
  /* Shimmer effect for loading states */
  .shimmer {
    position: relative;
    overflow: hidden;
  }
  
  .shimmer::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translateX(-100%);
    background-image: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0,
      rgba(255, 255, 255, 0.03) 20%,
      rgba(255, 255, 255, 0.05) 60%,
      rgba(255, 255, 255, 0)
    );
    animation: shimmer 2s infinite;
  }
  
  @keyframes shimmer {
    100% {
      transform: translateX(100%);
    }
  }

  /* Subtle border glow effect */
  .border-glow {
    box-shadow: 0 0 5px rgba(159, 216, 63, 0.2);
  }

  /* Minimal scrollbar */
  .minimal-scrollbar::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  .minimal-scrollbar::-webkit-scrollbar-track {
    background: theme('colors.dark.200');
  }

  .minimal-scrollbar::-webkit-scrollbar-thumb {
    background: theme('colors.dark.400');
    border-radius: 3px;
  }

  .minimal-scrollbar::-webkit-scrollbar-thumb:hover {
    background: theme('colors.lime.accent');
  }

  /* Spinner styles */
  .spinner {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    border-top-color: #a4e666;
    animation: spin 1s ease-in-out infinite;
  }

  .spinner-sm {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    border-top-color: #a4e666;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
} 